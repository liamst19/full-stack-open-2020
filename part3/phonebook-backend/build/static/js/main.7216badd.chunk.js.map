{"version":3,"sources":["services/phonebookdata.js","components/Filter.js","components/AddNew.js","components/PhoneBook.js","components/Message.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","person","post","delete","id","put","Filter","props","value","filterName","onChange","handleFilterChange","AddNew","onSubmit","handleAdd","name","handleNameChange","number","handleNumberChange","type","Person","key","onClick","e","window","confirm","handleDelete","PhoneBook","persons","map","Message","className","message","deletedMsg","updatedMsg","errors","error","switchMsg","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterName","setMessageContent","useEffect","phonebookdata","personsToShow","filter","includes","setMessage","msg","console","log","setTimeout","target","preventDefault","newPerson","trim","oldPerson","find","toLowerCase","updatedPerson","catch","err","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"oSAGMA,EAAU,eAsBF,EApBK,WAEf,OADiBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBhC,EAfI,SAAAC,GAEd,OADiBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAahC,EAVO,SAAAC,GAEjB,OADiBL,IAAMO,OAAOR,EAAU,IAAMM,EAAOG,KAS3C,EALO,SAAAH,GAEjB,OADiBL,IAAMS,IAAIV,EAAU,IAAMM,EAAOG,GAAIH,GACtCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCZ/BM,EARA,SAAAC,GACX,OAAO,6BACL,mDACoB,2BAAOC,MAAOD,EAAME,WAAYC,SAAUH,EAAMI,wBCc3DC,EAjBA,SAAAL,GACX,OAAO,6BACL,yCACA,0BAAMM,SAAUN,EAAMO,WACpB,sCACQ,2BAAON,MAAOD,EAAMQ,KAAML,SAAUH,EAAMS,oBAElD,wCACU,2BAAOR,MAAOD,EAAMU,OAAQP,SAAUH,EAAMW,sBAEtD,6BACE,4BAAQC,KAAK,UAAb,WCXJC,EAAS,SAAAb,GAMb,OACA,wBAAIc,IAAKd,EAAMN,OAAOG,IACjBG,EAAMN,OAAOc,KADlB,IACyBR,EAAMN,OAAOgB,OAClC,4BAAQK,QAPS,SAAAC,GAChBC,OAAOC,QAAP,iBAAyBlB,EAAMN,OAAOc,KAAtC,OAAgDR,EAAMmB,aAAanB,EAAMN,UAM1E,YAgBS0B,EAXG,SAAApB,GACd,OACE,6BACE,uCACA,4BACGA,EAAMqB,QAAQC,KAAI,SAAA5B,GAAM,OAAI,kBAAC,EAAD,CAAQoB,IAAKpB,EAAOG,GAAIH,OAAQA,EAAQyB,aAAcnB,EAAMmB,qBCyBpFI,G,MAxBC,SAAAvB,GAmBd,OAAQ,yBAAKwB,UAAS,kBAAaxB,EAAMyB,QAAQb,OAjB/B,SAACa,GACjB,OAAOA,EAAQb,MACf,IAAK,QACH,OAxBWJ,EAwBKiB,EAAQjB,KAxBT,gBAAaA,GAyB9B,IAAK,UACH,OAxBa,SAAAA,GAAI,wBAAeA,GAwBzBkB,CAAWD,EAAQjB,MAC5B,IAAK,UACH,OA3Ba,SAAAA,GAAI,mCAA0BA,GA2BpCmB,CAAWF,EAAQjB,MAC5B,IAAK,QAEH,OAAOiB,EAAQG,OAASH,EAAQG,OAAOpC,SAASC,KAAKoC,MAAMJ,QAAU,uBAEvE,QACE,MAAO,GAlCI,IAAAjB,EAuCdsB,CAAU9B,EAAMyB,YCgEJM,EAlGH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRX,EADQ,KACCY,EADD,OAEgBD,mBAAS,IAFzB,mBAERE,EAFQ,KAECC,EAFD,OAGoBH,mBAAS,IAH7B,mBAGRI,EAHQ,KAGGC,EAHH,OAIsBL,mBAAS,IAJ/B,mBAIR9B,EAJQ,KAIIoC,EAJJ,OAKuBN,mBAAS,IALhC,mBAKRP,EALQ,KAKCc,EALD,KAOhBC,qBAAU,WACRC,IACGlD,MAAK,SAAAE,GACJwC,EAAWxC,QAEd,IAEH,IAAMiD,EAAgBrB,EAAQsB,QAAO,SAAAjD,GAAM,OAAIA,EAAOc,KAAKoC,SAAS1C,MAE9D2C,EAAa,SAAAC,GACjBC,QAAQC,IAAIF,GACZP,EAAkBO,GACF,UAAbA,EAAIlC,MACLK,OAAOgC,YAAW,kBAAKV,EAAkB,MAAK,MAkElD,OAAQ,6BACJ,yCACA,kBAAC,EAAD,CAASd,QAASA,IAClB,kBAAC,EAAD,CAAQvB,WAAYA,EAAYE,mBALT,SAAAY,GAAC,OAAIsB,EAActB,EAAEkC,OAAOjD,UAMnD,kBAAC,EAAD,CACEO,KAAM0B,EAASzB,iBATI,SAAAO,GAAC,OAAImB,EAAWnB,EAAEkC,OAAOjD,QAU5CS,OAAQ0B,EAAWzB,mBATE,SAAAK,GAAC,OAAIqB,EAAarB,EAAEkC,OAAOjD,QAUhDM,UArEY,SAAAS,GAChBA,EAAEmC,iBAEF,IAAMC,EAAY,CAChB5C,KAAM0B,EAAQmB,OACd3C,OAAQ0B,EAAUiB,QAGdC,EAAYjC,EAAQkC,MAAK,SAAA7D,GAAM,OAAIA,EAAOc,KAAKgD,gBAAkBJ,EAAU5C,KAAKgD,iBAEnFF,EACErC,OAAOC,QAAP,UAAkBkC,EAAU5C,KAA5B,wEACDiC,EACgB,CACZjC,KAAM4C,EAAU5C,KAChBE,OAAQ0C,EAAU1C,OAClBb,GAAIyD,EAAUzD,KAEfN,MAAK,SAAAkE,GACJxB,EAAWZ,EAAQC,KAAI,SAAA5B,GAAM,OAAIA,EAAOG,KAAO4D,EAAc5D,GAAK4D,EAAgB/D,MAClFmD,EAAW,CAACjC,KAAM,UACNJ,KAAMiD,EAAcjD,UAEjCkD,OAAM,SAAAC,GACLd,EAAW,CAACjC,KAAM,QACNJ,KAAM8C,EAAU9C,KAChBoB,OAAQ+B,OAK1BlB,EACaW,GACV7D,MAAK,SAAAG,GACJuC,EAAWZ,EAAQuC,OAAOlE,IAC1BmD,EAAW,CAACjC,KAAM,QACNJ,KAAMd,EAAOc,UAE1BkD,OAAM,SAAA9B,GACLiB,EAAW,CAACjC,KAAM,QACNJ,KAAM4C,EAAU5C,KAChBoB,OAAQA,OAI1BO,EAAW,IACXE,EAAa,OAwBX,kBAAC,EAAD,CAAWhB,QAASqB,EAAevB,aArBlB,SAAA0C,GACnBpB,EACgBoB,GACbtE,MAAK,WACJ0C,EAAWZ,EAAQsB,QAAO,SAAAjD,GAAM,OAAIA,EAAOG,KAAOgE,EAAehE,OACjEgD,EAAW,CAACjC,KAAM,UAAWJ,KAAMqD,EAAerD,eCjF1DsD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7216badd.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// const baseUrl = 'http://localhost:3001/persons';\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getNumbers = () => {\r\n    const response = axios.get(baseUrl);\r\n    return response.then(response => response.data);\r\n};\r\n\r\nconst addNumber = person => {\r\n    const response = axios.post(baseUrl, person);\r\n    return response.then(response => response.data); \r\n};\r\n\r\nconst deleteNumber = person => {\r\n    const response = axios.delete(baseUrl + '/' + person.id);\r\n    return response;\r\n};\r\n\r\nconst updateNumber = person => {\r\n    const response = axios.put(baseUrl + '/' + person.id, person);\r\n    return response.then(response => response.data);\r\n};\r\n\r\nexport default{ getNumbers, addNumber, deleteNumber, updateNumber };\r\n","import React from 'react';\r\n\r\nconst Filter = props => {\r\n    return(<div>\r\n      <form>\r\n        filter shown with <input value={props.filterName} onChange={props.handleFilterChange} />\r\n      </form>\r\n    </div>);\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst AddNew = props => {\r\n    return(<div>\r\n      <h2>add a new</h2>\r\n      <form onSubmit={props.handleAdd}>\r\n        <div>\r\n          name: <input value={props.name} onChange={props.handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={props.number} onChange={props.handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>)\r\n}\r\n\r\nexport default AddNew","import React from 'react';\r\n\r\nconst Person = props => {\r\n\r\n  const handleDelete = e => {\r\n    if(window.confirm(`Delete ${props.person.name}?`)) props.handleDelete(props.person);\r\n  }\r\n\r\n  return (\r\n  <li key={props.person.id}>\r\n      {props.person.name} {props.person.number}\r\n      <button onClick={handleDelete}>delete</button>\r\n  </li>\r\n  )\r\n};\r\n\r\nconst PhoneBook = props => {\r\n    return (\r\n      <div>\r\n        <h2>Numbers</h2> \r\n        <ul>\r\n          {props.persons.map(person => <Person key={person.id} person={person} handleDelete={props.handleDelete} />)}  \r\n        </ul>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default PhoneBook\r\n","import React from 'react';\r\nimport '../css/Message.css';\r\n\r\nconst addedMsg = name => `Added ${name}`;\r\nconst updatedMsg = name => `Updated number for ${name}`;\r\nconst deletedMsg = name => `Deleted ${name}`;\r\nconst alreadyRemovedMsg = name => `Information of ${name} has already been removed from server`;\r\n\r\nconst ErrorMessages = props => {\r\n  if(props.errors.length > 1){\r\n    return props.errors[0].message\r\n  }\r\n  else if(props.errors.length === 1){\r\n    return (<ul>\r\n           {props.errors.map((error, i) => <li key={i}>{error.message}</li>)}\r\n         </ul>)\r\n  }\r\n  else{\r\n    return props.errors.message;\r\n  }\r\n}\r\n\r\nconst Message = props => {\r\n\r\n  const switchMsg = (message) => {\r\n    switch(message.type){\r\n    case 'added':\r\n      return addedMsg(message.name);\r\n    case 'deleted':\r\n      return deletedMsg(message.name);\r\n    case 'updated':\r\n      return updatedMsg(message.name);\r\n    case 'error':\r\n\r\n      return message.errors ? message.errors.response.data.error.message : 'something went wrong'\r\n      // return <ErrorMessages errors={message.errors.response.data.error} />;\r\n    default:\r\n      return '';\r\n    }\r\n  }\r\n\r\n  return (<div className={`message ${props.message.type}`}>\r\n  {switchMsg(props.message)}\r\n</div>)\r\n};\r\n\r\nexport default Message;\r\n","import React, {useState, useEffect} from 'react'\nimport phonebookdata from './services/phonebookdata'\n\nimport Filter from './components/Filter'\nimport AddNew from './components/AddNew'\nimport PhoneBook from './components/PhoneBook'\nimport Message from './components/Message'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ message, setMessageContent ] = useState({})\n\n  useEffect(()=>{\n    phonebookdata.getNumbers()\n      .then(data=> {\n        setPersons(data)\n      })\n  }, [])\n\n  const personsToShow = persons.filter(person => person.name.includes(filterName))\n\n  const setMessage = msg => {\n    console.log(msg)\n    setMessageContent(msg)\n    if(msg.type !== 'error'){\n      window.setTimeout(()=> setMessageContent({}), 2000)\n    }\n  }\n\n  const handleAdd = e => {\n    e.preventDefault()\n\n    const newPerson = {\n      name: newName.trim(),\n      number: newNumber.trim(),\n    }\n\n    const oldPerson = persons.find(person => person.name.toLowerCase() === newPerson.name.toLowerCase())\n\n    if(oldPerson){\n      if(window.confirm(`${newPerson.name} is already added to phonebook. Replace old number with a new one?`)){\n        phonebookdata\n          .updateNumber({\n            name: newPerson.name,\n            number: newPerson.number,\n            id: oldPerson.id\n          })\n          .then(updatedPerson => {\n            setPersons(persons.map(person => person.id === updatedPerson.id ? updatedPerson : person ))\n            setMessage({type: 'updated',\n                        name: updatedPerson.name})\n          })\n          .catch(err =>{\n            setMessage({type: 'error',\n                        name: oldPerson.name,\n                        errors: err})\n          })\n      }\n    }\n    else{\n      phonebookdata\n        .addNumber(newPerson)\n        .then(person => {\n          setPersons(persons.concat(person))\n          setMessage({type: 'added',\n                      name: person.name})\n        })\n        .catch(errors=>{\n          setMessage({type: 'error',\n                      name: newPerson.name,\n                      errors: errors})\n        });\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDelete = personToDelete => {\n    phonebookdata\n      .deleteNumber(personToDelete)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== personToDelete.id))\n        setMessage({type: 'deleted', name: personToDelete.name})\n      })\n  }\n\n  const handleNameChange = e => setNewName(e.target.value)\n  const handleNumberChange = e => setNewNumber(e.target.value)\n  const handleFilterChange = e => setFilterName(e.target.value)\n\n  return (<div>\n      <h1>Phonebook</h1>\n      <Message message={message} />\n      <Filter filterName={filterName} handleFilterChange={handleFilterChange} />\n      <AddNew \n        name={newName} handleNameChange={handleNameChange} \n        number={newNumber} handleNumberChange={handleNumberChange}\n        handleAdd={handleAdd} />\n      <PhoneBook persons={personsToShow} handleDelete={handleDelete} />\n  </div>)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}